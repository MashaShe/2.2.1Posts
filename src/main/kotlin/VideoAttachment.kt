data class VideoAttachment (
    override val type: String,
    val video: Video
):Attachment {

}
data class Video (
    val id: Int =0, //идентификатор видеозаписи.
    val ownerId: Int = 0, //идентификатор владельца видеозаписи.
    val title: String =" ", //название видеозаписи.
    val description: String =" ", //текст описания видеозаписи.
    val duration: Int =0, //длительность ролика в секундах.
    val image: Array<VideoImage>? = null, //Изображение обложки. Содержит массив объектов с полями:
    val firstFrame: Array <FirstFrame>? = null, //Изображение первого кадра. Содержит массив объектов с полями:
    val date: Int =0, //дата создания видеозаписи в формате Unixtime.
    val addingDate: Int =0, //дата добавления видеозаписи пользователем или группой в формате Unixtime.
    val views: Int =0, //количество просмотров видеозаписи.
    val localViews: Int =0, //Если видео внешнее, количество просмотров в ВК.
    val comments: Int =0, //количество комментариев к видеозаписи.
    val player: String =" ", // URL страницы с плеером, который можно использовать для воспроизведения ролика в браузере. Поддерживается flash и html5, плеер всегда масштабируется по размеру окна.
    val platform: String = " ", // название платформы (для видеозаписей, добавленных с внешних сайтов).
    val canEditVideo: Int? = 1, //integer, [1]	поле возвращается, если пользователь может редактировать видеозапись, всегда содержит 1.
    val canAdd: Boolean = false, //Может ли пользователь добавить видеозапись к себе. false — Не может добавить. true — Может добавить.
    val isPrivate: Int? = 1, //integer, [1]	поле возвращается, если видеозапись приватная (например, была загружена в личное сообщение), всегда содержит 1.
    val accessKey: String = " ", //ключ доступа к объекту. Подробнее см. Ключ доступа к данным access_key.
    val processing: Int? =1, //integer, [1]	поле возвращается в том случае, если видеоролик находится в процессе обработки, всегда содержит 1.
    val isFavorite: Boolean = false, // true, если объект добавлен в закладки у текущего пользователя.
    val canComment: Boolean = false, //Может ли пользователь комментировать видео.
    val canEdit: Boolean = false, //Может ли пользователь редактировать видео.
    val canLike: Boolean = true, //Может ли пользователь добавить видео в список <<Мне нравится>>.
    val canRepost: Boolean = true, //Может ли пользователь сделать репост видео.
    val canSubscribe: Boolean = true, //Может ли пользователь подписаться на автора видео.
    val canAddToFaves: Boolean = true, //Может ли пользователь добавить видео в избранное.
    val canAttachLink: Boolean = false, //Может ли пользователь прикрепить кнопку действия к видео.
    val width: Int = 0, //	Ширина видео.
    val height: Int = 0, //	Высота видео.
    val userId: Int = 0, //	Идентификатор пользователя, загрузившего видео, если оно было загружено в группу одним из участников.
    val converting: Boolean = false, // Конвертируется ли видео.
    val added: Boolean = false, // Добавлено ли видео в альбомы пользователя.
    val isSubscribed: Boolean = false, //Подписан ли пользователь на автора видео.
    val repeat: Int? = 1, // поле возвращается в том случае, если видео зациклено, всегда содержит 1
    val type: String = " ", // Тип видеозаписи. Может принимать значения: "video", "music_video", "movie".
    val balance: Int = 0, // Баланс донатов в прямой трансляции.
    val liveStatus: String = " ", //Статус прямой трансляции. Может принимать значения: "waiting", "started", "finished", "failed", "upcoming".
    val live: Int? = 1, //поле возвращается в том случае, если видеозапись является прямой трансляцией, всегда содержит 1. Обратите внимание, в этом случае в поле duration содержится значение 0.
    val upcoming: Int = 0, // (для live = 1). Поле свидетельствует о том, что трансляция скоро начнётся.
    val spectators: Int = 0, //	Количество зрителей прямой трансляции.
    val likes: Likes? = null, // Содержит объект отметки <<Мне нравится>>.
    val reposts: VideoReposts? = null // Содержит объект репоста. - см отдельный класс
)

data class VideoImage (
    val height: Int = 0, // Высота изображения.
    val url: String = " ", // Ссылка на изображение
    val width: Int =0,// Ширина изображение
    val with_padding: Int? =1// Поле возвращается, если изображение с отбивкой, всегда содержит 1.

)

data class VideoReposts (
    val count: Int =0, // Счетчик общего количества репостов. Содержит сумму репостов на стену и в личные сообщения.
    val wallCount: Int = 0, // Счетчик репостов на стену.
    val mailCcount: Int = 0, // Счетчик репостов в личные сообщения.
    val userReposted: Int = 0//Информация о том, сделал ли текущий пользователь репост этого видео.
)

data class FirstFrame (
    val height: Int =0, //Высота изображения.
    val url: String =" ", //Ссылка на изображение
    val width: Int =0 //Ширина изображение
)